/*! modernizr 3.5.0 (Custom Build) | MIT *
 * https://modernizr.com/download/?-cssgrid_cssgridlegacy-cssvhunit-cssvwunit-flexbox-flexwrap-mediaqueries-setclasses !*/
!function (e, n, t) { function r(e, n) { return typeof e === n } function s() { var e, n, t, s, o, i, a; for (var l in w) if (w.hasOwnProperty(l)) { if (e = [], n = w[l], n.name && (e.push(n.name.toLowerCase()), n.options && n.options.aliases && n.options.aliases.length)) for (t = 0; t < n.options.aliases.length; t++) e.push(n.options.aliases[t].toLowerCase()); for (s = r(n.fn, "function") ? n.fn() : n.fn, o = 0; o < e.length; o++) i = e[o], a = i.split("."), 1 === a.length ? Modernizr[a[0]] = s : (!Modernizr[a[0]] || Modernizr[a[0]] instanceof Boolean || (Modernizr[a[0]] = new Boolean(Modernizr[a[0]])), Modernizr[a[0]][a[1]] = s), C.push((s ? "" : "no-") + a.join("-")) } } function o(e) { var n = x.className, t = Modernizr._config.classPrefix || ""; if (_ && (n = n.baseVal), Modernizr._config.enableJSClass) { var r = new RegExp("(^|\\s)" + t + "no-js(\\s|$)"); n = n.replace(r, "$1" + t + "js$2") } Modernizr._config.enableClasses && (n += " " + t + e.join(" " + t), _ ? x.className.baseVal = n : x.className = n) } function i(n, t, r) { var s; if ("getComputedStyle" in e) { s = getComputedStyle.call(e, n, t); var o = e.console; if (null !== s) r && (s = s.getPropertyValue(r)); else if (o) { var i = o.error ? "error" : "log"; o[i].call(o, "getComputedStyle returning null, its possible modernizr test results are inaccurate") } } else s = !t && n.currentStyle && n.currentStyle[r]; return s } function a() { return "function" != typeof n.createElement ? n.createElement(arguments[0]) : _ ? n.createElementNS.call(n, "http://www.w3.org/2000/svg", arguments[0]) : n.createElement.apply(n, arguments) } function l() { var e = n.body; return e || (e = a(_ ? "svg" : "body"), e.fake = !0), e } function u(e, t, r, s) { var o, i, u, f, d = "modernizr", c = a("div"), p = l(); if (parseInt(r, 10)) for (; r--;) u = a("div"), u.id = s ? s[r] : d + (r + 1), c.appendChild(u); return o = a("style"), o.type = "text/css", o.id = "s" + d, (p.fake ? p : c).appendChild(o), p.appendChild(c), o.styleSheet ? o.styleSheet.cssText = e : o.appendChild(n.createTextNode(e)), c.id = d, p.fake && (p.style.background = "", p.style.overflow = "hidden", f = x.style.overflow, x.style.overflow = "hidden", x.appendChild(p)), i = t(c, e), p.fake ? (p.parentNode.removeChild(p), x.style.overflow = f, x.offsetHeight) : c.parentNode.removeChild(c), !!i } function f(e, n) { return !!~("" + e).indexOf(n) } function d(e) { return e.replace(/([a-z])-([a-z])/g, function (e, n, t) { return n + t.toUpperCase() }).replace(/^-/, "") } function c(e, n) { return function () { return e.apply(n, arguments) } } function p(e, n, t) { var s; for (var o in e) if (e[o] in n) return t === !1 ? e[o] : (s = n[e[o]], r(s, "function") ? c(s, t || n) : s); return !1 } function m(e) { return e.replace(/([A-Z])/g, function (e, n) { return "-" + n.toLowerCase() }).replace(/^ms-/, "-ms-") } function h(n, r) { var s = n.length; if ("CSS" in e && "supports" in e.CSS) { for (; s--;) if (e.CSS.supports(m(n[s]), r)) return !0; return !1 } if ("CSSSupportsRule" in e) { for (var o = []; s--;) o.push("(" + m(n[s]) + ":" + r + ")"); return o = o.join(" or "), u("@supports (" + o + ") { #modernizr { position: absolute; } }", function (e) { return "absolute" == i(e, null, "position") }) } return t } function v(e, n, s, o) { function i() { u && (delete j.style, delete j.modElem) } if (o = r(o, "undefined") ? !1 : o, !r(s, "undefined")) { var l = h(e, s); if (!r(l, "undefined")) return l } for (var u, c, p, m, v, g = ["modernizr", "tspan", "samp"]; !j.style && g.length;) u = !0, j.modElem = a(g.shift()), j.style = j.modElem.style; for (p = e.length, c = 0; p > c; c++) if (m = e[c], v = j.style[m], f(m, "-") && (m = d(m)), j.style[m] !== t) { if (o || r(s, "undefined")) return i(), "pfx" == n ? m : !0; try { j.style[m] = s } catch (y) { } if (j.style[m] != v) return i(), "pfx" == n ? m : !0 } return i(), !1 } function g(e, n, t, s, o) { var i = e.charAt(0).toUpperCase() + e.slice(1), a = (e + " " + P.join(i + " ") + i).split(" "); return r(n, "string") || r(n, "undefined") ? v(a, n, s, o) : (a = (e + " " + E.join(i + " ") + i).split(" "), p(a, n, t)) } function y(e, n, r) { return g(e, t, t, n, r) } var C = [], w = [], S = { _version: "3.5.0", _config: { classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0 }, _q: [], on: function (e, n) { var t = this; setTimeout(function () { n(t[e]) }, 0) }, addTest: function (e, n, t) { w.push({ name: e, fn: n, options: t }) }, addAsyncTest: function (e) { w.push({ name: null, fn: e }) } }, Modernizr = function () { }; Modernizr.prototype = S, Modernizr = new Modernizr; var x = n.documentElement, _ = "svg" === x.nodeName.toLowerCase(), b = S.testStyles = u; b("#modernizr { height: 50vh; }", function (n) { var t = parseInt(e.innerHeight / 2, 10), r = parseInt(i(n, null, "height"), 10); Modernizr.addTest("cssvhunit", r == t) }), b("#modernizr { width: 50vw; }", function (n) { var t = parseInt(e.innerWidth / 2, 10), r = parseInt(i(n, null, "width"), 10); Modernizr.addTest("cssvwunit", r == t) }); var T = function () { var n = e.matchMedia || e.msMatchMedia; return n ? function (e) { var t = n(e); return t && t.matches || !1 } : function (n) { var t = !1; return u("@media " + n + " { #modernizr { position: absolute; } }", function (n) { t = "absolute" == (e.getComputedStyle ? e.getComputedStyle(n, null) : n.currentStyle).position }), t } }(); S.mq = T, Modernizr.addTest("mediaqueries", T("only all")); var z = "Moz O ms Webkit", P = S._config.usePrefixes ? z.split(" ") : []; S._cssomPrefixes = P; var E = S._config.usePrefixes ? z.toLowerCase().split(" ") : []; S._domPrefixes = E; var N = { elem: a("modernizr") }; Modernizr._q.push(function () { delete N.elem }); var j = { style: N.elem.style }; Modernizr._q.unshift(function () { delete j.style }), S.testAllProps = g, S.testAllProps = y, Modernizr.addTest("cssgridlegacy", y("grid-columns", "10px", !0)), Modernizr.addTest("cssgrid", y("grid-template-rows", "none", !0)), Modernizr.addTest("flexbox", y("flexBasis", "1px", !0)), Modernizr.addTest("flexwrap", y("flexWrap", "wrap", !0)), s(), o(C), delete S.addTest, delete S.addAsyncTest; for (var q = 0; q < Modernizr._q.length; q++) Modernizr._q[q](); e.Modernizr = Modernizr }(window, document);